#!/usr/bin/env Rscript

# This script converts DNA sequences downloaded from BOLD and retrieves the taxonomic identifier of the taxon from NCBI taxonomy,
# to create a new fasta file with the following information to be used with OBITools: taxid, scientific_name, and record id (from BOLD).
# For those taxa whose rank is not included in NCBI taxonomy the script will look for the immediate parent, and register the rank change.
# It can be run with an NCBI key to maximize up to 10 the number of queries per second to NCBI (set as environment variable). This can be 
# removed after the script with the following command:
# > Sys.unsetenv("ENTREZ_KEY")

library(bold)
library(seqinr)
library(taxize)
library(optparse)

#Set file names for input and output files
options( warn = -1 )

option_list = list(
  make_option(c("-i", "--input_fasta"), type="character", default=NULL,
              help="fasta file with the sequences to be renamed", metavar="character"),
  make_option(c("-o", "--output_fasta"), type="character", default=NULL,
              help="Output file name [default = input file ending in _taxid.csv]", metavar="character"),
  make_option(c("-k", "--key_NCBI"), type="character", default=NULL,
              help="Output file name [default = input file ending in _taxid.csv]", metavar="character"),
  make_option(c("-t", "--taxon"), type="character", default=NULL,
              help="Taxonomic group of interest to resolve name duplications (optional)", metavar="character")
)

opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);

if (is.null(opt$input_fasta)){
  print_help(opt_parser)
  stop("At least one file must be provided: input fasta with the sequences to be renamed.", call.=FALSE)
}

if (is.null(opt$output_fasta)){
  opt$output_fasta <- paste(substr(opt$input_fasta,1,nchar(opt$input_fasta)-6),"_taxid.fasta",sep="")
}

infile <- opt$input_fasta
outfile <- opt$output_fasta
key <- opt$key_NCBI
taxon <- opt$taxon


Sys.setenv(ENTREZ_KEY=key)
seq_no_taxid <- read.fasta(infile, as.string = T, whole.header = T, forceDNAtolower=F)

boldid <- NULL
boldname <- NULL
taxid <- NULL
rank <- NULL
newname <- NULL
ori_name <- NULL
ori_rank <- NULL
for (i in 1:length(seq_no_taxid)){
  message("Retrieving taxid for sequence ", i, " of ", length(seq_no_taxid), "\r", appendLF = T)
  boldid[i] <- gsub("\\|.*","", getName(seq_no_taxid[i]))
  boldname[i] <- strsplit(getName(seq_no_taxid), "\\|")[[i]][2]
  ori_name[i] <- boldname[i]
  if (length(grep("sp.", boldname[i]))!=0){
    boldname[i] <- strsplit(boldname[i], " ")[[1]][1]
  } else{}
  if (length(grep("cf.", boldname[i]))!=0){
    boldname[i] <- strsplit(boldname[i], " ")[[1]][1]
  } else{}
  if (length(grep("aff.", boldname[i]))!=0){
    boldname[i] <- strsplit(boldname[i], " ")[[1]][1]
  } else{}
  taxonomy_num <- as.character(get_uid(boldname[i], division_filter = "Metazoa", messages=F))[1]
  if (is.na(taxonomy_num)==T){
    ori_rank[i] <- bold_tax_name(boldname[i])$tax_rank
  } else {}
  while (is.na(taxonomy_num)==T){
  parent_tax <- bold_tax_name(boldname[i])$parentname
  message("!! Taxon *", boldname[i], "* not found in NCBI's taxonomy. Trying parent taxon", "\r", appendLF = T)
  taxonomy_num <- as.character(get_uid(parent_tax, division_filter = "Metazoa", messages=F))[1]
  boldname[i] <- parent_tax
  }
  taxid[i] <- taxonomy_num
  rank[i] <- ncbi_get_taxon_summary(taxid[i])$rank
  message(">>> taxid registered for taxon *", boldname[i],"*\n", appendLF = T)
  if (ori_name[i]!=boldname[i]){
    newname[i] <- paste(boldid[i]," scientific_name=", boldname[i], "; taxid=",taxid[i],"; rank=",rank[i],"; original_db_name=", ori_name[i],"; original_db_rank=", ori_rank[i], ";", sep = "")
  } else{
    newname[i] <- paste(boldid[i]," scientific_name=", boldname[i], "; taxid=",taxid[i],"; rank=",rank[i],";", sep = "")
  }
}

for (i in 1:length(seq_no_taxid)){
  seq_no_taxid[[i]][1] <- gsub("-", "", getSequence(seq_no_taxid, as.string = T)[[i]])
}

write.fasta(seq_no_taxid, newname, outfile, as.string = T, open = "w", nbchar = max(getLength(seq_no_taxid)))
message(outfile, " created with NCBI taxids")
