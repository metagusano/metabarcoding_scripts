#!/usr/bin/env Rscript

###Before running this script make sure to change the number of the samples and the number of columns (they will depend on the number of samples)

### If running from command line, take out the coments of this chunk, and comment the next chunk
args = commandArgs(T)
if (length(args)!=4) {
  stop("Please enter a .csv input file and output file, a mistag threshold (in proportion, not %), and a minimum OTU reads threshold")
} else if (length(args)==4) {
  input_table <- args[1]
  output_table <- args[2]
  mistag <- as.numeric(args[3])
  minimum_reads <- as.numeric(args[4])
}
###

### If running from R studio, take out the coments of this chunk, and comment the next chunk. Input the files.
#input_table <- "~/Documents/Projects/Malaise/Malaise-soil/COI.finalOTUs.csv"
#output_table <- "~/Documents/Projects/Malaise/Malaise-soil/COI.final_curated.csv"
#mistag <- 0.004
#mistag <- as.numeric(mistag)
#minimum_reads <- 10
#minimum_reads <- as.numeric(minimum_reads)
###

OTUs <- read.csv(input_table, header=T, sep = ";")
OTUs <- data.frame(OTUs)
newmatrix_none <- NULL
newmatrix_species <- NULL
newmatrix_none <- data.frame(newmatrix_none)
newmatrix_species <- data.frame(newmatrix_species)
message("Reading original matrix with"," ", length(OTUs[,1])," ", "MOTUs")

for (i in 1:length(OTUs[,1])){
  message("Checking MOTU", " ",i, " ", "of"," ", length(OTUs[,1])," ", "MOTUs")
  if (OTUs$species_name[i] == "None") {
    newmatrix_none <- rbind(newmatrix_none, OTUs[i,])
  } else {
    newmatrix_species <- rbind(newmatrix_species, OTUs[i,])
  }
}


newmatrix_clean_names <- with(newmatrix_species, aggregate(list(E1_1=E1_1, E1_2=E1_2, E1_3=E1_3, E1_4=E1_4, E2_1=E2_1, E2_2=E2_2, E2_3=E2_3, E2_4=E2_4, E3_1=E3_1, E3_2=E3_2, E3_3=E3_3, E3_4=E3_4, H1_1=H1_1, H1_2=H1_2, H1_3=H1_3, H1_4=H1_4, H2_1=H2_1, H2_2=H2_2, H2_3=H2_3, H2_4=H2_4, H3_1=H3_1, H3_2=H3_2, H3_3=H3_3, H3_4=H3_4, L1_1=L1_1, L1_2=L1_2, L1_3=L1_3, L1_4=L1_4, L2_1=L2_1, L2_2=L2_2, L2_3=L2_3, L2_4=L2_4, L3_1=L3_1, L3_2=L3_2, L3_3=L3_3, L3_4=L3_4, T1_1=T1_1, T1_2=T1_2, T1_3=T1_3, T1_4=T1_4, T2_1=T2_1, T2_2=T2_2, T2_3=T2_3, T2_4=T2_4, T3_1=T3_1, T3_2=T3_2, T3_3=T3_3, T3_4=T3_4), ## change name of samples
                                               list(rank=rank, scientific_name=scientific_name, superkingdom_name=superkingdom_name, kingdom_name=kingdom_name, phylum_name=phylum_name, class_name=class_name, order_name=order_name, family_name=family_name, genus_name=genus_name, species_name=species_name, taxid=taxid),
                                                sum))
newmatrix_clean_id <- with(newmatrix_species, aggregate(list(id=id), list(rank=rank, scientific_name=scientific_name, superkingdom_name=superkingdom_name, kingdom_name=kingdom_name, phylum_name=phylum_name, class_name=class_name, order_name=order_name, family_name=family_name, genus_name=genus_name, species_name=species_name, taxid=taxid), head, 1))
newmatrix_clean_id <- subset(newmatrix_clean_id, select=c(id,rank, scientific_name, superkingdom_name, kingdom_name, phylum_name, class_name, order_name, family_name, genus_name, species_name, taxid))
newmatrix_clean <- merge(newmatrix_clean_id, newmatrix_clean_names, by=c("rank", "scientific_name", "superkingdom_name", "kingdom_name", "phylum_name", "class_name", "order_name", "family_name", "genus_name", "species_name", "taxid"))
newmatrix_clean <- subset(newmatrix_clean, select=c(id,rank, scientific_name, superkingdom_name, kingdom_name, phylum_name, class_name, order_name, family_name, genus_name, species_name, taxid,E1_1, E1_2, E1_3, E1_4, E2_1, E2_2, E2_3, E2_4, E3_1, E3_2, E3_3, E3_4, H1_1, H1_2, H1_3, H1_4, H2_1, H2_2, H2_3, H2_4, H3_1, H3_2, H3_3, H3_4, L1_1, L1_2, L1_3, L1_4, L2_1, L2_2, L2_3, L2_4, L3_1, L3_2, L3_3, L3_4, T1_1, T1_2, T1_3, T1_4, T2_1, T2_2, T2_3, T2_4, T3_1, T3_2, T3_3, T3_4)) ## change name of samples

newmatrix_none_edited <- newmatrix_none[,-c(4,13,14)]
final_matrix <- rbind(newmatrix_none_edited, newmatrix_clean)
message("Matrix after collapsing same species has"," ", length(final_matrix[,1])," ", "MOTUs")

for (i in 13:60) { ## change number of coulmns
  total_sample <- as.numeric(sum(final_matrix[,i]))
  message("Checking sample", " ",i-12, " ", "of"," ", length(13:60)," ", "samples") ## change number of coulmns
  for (j in 1:length(final_matrix[,1])) {
    if (final_matrix[j,i] < (total_sample*mistag)) {
      final_matrix[j,i] <- 0
    } else {
    }
  }
}
message("Matrix has been cleaned of false MOTUs occurrences")

final_matrix_sum <- cbind(final_matrix, Sum = 0)
for (i in 1:length(final_matrix_sum[,1])){
  final_matrix_sum$Sum[i] = rowSums(final_matrix_sum[i,c(13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60)]) ## change number of coulmns
}

final_matrix_corrected <- final_matrix_sum[!(final_matrix_sum$Sum<=minimum_reads),]
message("Samples have been cleaned of low abundance MOTUs")

write.table(final_matrix_corrected, output_table, col.names=T, row.names=F,sep=";")
message("New table written with corrected MOTUs occurrences:", " ",length(final_matrix_corrected[,1]), " ", "real MOTUs")
