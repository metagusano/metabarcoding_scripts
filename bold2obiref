Danielito:~ $ ssh danima@rackham.uppmax.uu.se
danima@rackham.uppmax.uu.se's password: 

As we cannot determine that the host you are connecting from is within
Sweden, you are required to use two factor authentication for this
connection. See 
https://www.uppmax.uu.se/support/faq/login-problems-faq/why-do-i-need-two-factor-authentication/
for more details.

If you see this while running scp/sftp or something similar, see
https://www.uppmax.uu.se/support-sv/user-guides/transferring-files-2fa/


If you do not have a second factor, you can request one at
https://www.uppmax.uu.se/support/user-guides/setting-up-two-factor-authentication/

Please enter the current code from your second factor: 
781570
Success, logging you in.
bash: warning: setlocale: LC_CTYPE: cannot change locale (): No such file or directory
bash: warning: setlocale: LC_CTYPE: cannot change locale (): No such file or directory
 _   _ ____  ____  __  __    _    __  __
| | | |  _ \|  _ \|  \/  |  / \   \ \/ /   | System:    rackham2
| | | | |_) | |_) | |\/| | / _ \   \  /    | User:      danima
| |_| |  __/|  __/| |  | |/ ___ \  /  \    | 
 \___/|_|   |_|   |_|  |_/_/   \_\/_/\_\   | 

###############################################################################

        User Guides: http://www.uppmax.uu.se/support/user-guides
        FAQ: http://www.uppmax.uu.se/support/faq

        Write to support@uppmax.uu.se, if you have questions or comments.


Notice(s) for upcoming maintenance on rackham:

  February maintenance window
  http://status.uppmax.uu.se/2023-01-27/february-maintenance/


  Nodes turned off to save power
  http://status.uppmax.uu.se/2022-12-13/power-off/

Active notices for rackham:

  UPPMAX is looking to hire a system administrator
  http://status.uppmax.uu.se/2022-11-25/sysadmin-position/

[danima@rackham2 danima]$ ls
bin  glob  metab  nextflow  private  R	test
[danima@rackham2 danima]$ ls metab/
ecoPCR	      ecoPCR.tar.gz  get-obitools.py  primers_nov17	 sumaclust_v1.0.20.tar	vsearch
ecoPCR_oct17  ecoPrimers     OBITools-1.2.11  sumaclust_v1.0.20  swarm-2.1.13
[danima@rackham2 danima]$ ls test/
Entomobryomorpha.fasta	taxo
[danima@rackham2 danima]$ ls test/taxo/
citations.dmp  division.dmp	     fullnamelineage.dmp  host.dmp    names.dmp        nodes.dmp	  taxidlineage.dmp  typeoftype.dmp
delnodes.dmp   excludedfromtype.dmp  gencode.dmp	  merged.dmp  new_taxdump.tar  rankedlineage.dmp  typematerial.dmp
[danima@rackham2 danima]$ vim bold2obiref
[danima@rackham2 danima]$ chmod +x bold2obiref 
[danima@rackham2 danima]$ bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
bash: bold2obiref: command not found
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ R

R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(bold)
> q()
Save workspace image? [y/n/c]: n
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 13: syntax error near unexpected token `library'
./bold2obiref: line 13: `suppressMessages(library(data.table))'
[danima@rackham2 danima]$ less bold2obiref 
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 12: syntax error near unexpected token `bold'
./bold2obiref: line 12: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 11: syntax error near unexpected token `bold'
./bold2obiref: line 11: `library(bold)'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 11: syntax error near unexpected token `library'
./bold2obiref: line 11: `suppressMessages(library(bold))'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
./bold2obiref: line 11: syntax error near unexpected token `bold'
./bold2obiref: line 11: `library(bold))'
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
Error: unexpected ')' in "library(bold))"
Execution halted
[danima@rackham2 danima]$ vim bold2obiref 
[danima@rackham2 danima]$ ./bold2obiref -i Tomoceridae.fas -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
Reading reference fasta file from BOLD
Error in file(con, "r") : cannot open the connection
Calls: read.fasta -> readLines -> file
Execution halted
[danima@rackham2 danima]$ ls
bin  bold2obiref  glob	metab  nextflow  private  R  test
[danima@rackham2 danima]$ mv bold2obiref test/.
[danima@rackham2 danima]$ cd test/
[danima@rackham2 test]$ ls
bold2obiref  Entomobryomorpha.fasta  taxo
[danima@rackham2 test]$ ./bold2obiref -i Entomobryomorpha.fasta -d taxo -r family -t Tomoceridae -R AAAAAAAAAAA
Reading reference fasta file from BOLD
> Imported 8 sequences

Reading NCBI's taxonomy database
Read 2439349 records
Reducing database to include only 828 records from family Tomoceridae
Read 2439350 records
> Taxonomy database ready

Extracting taxid & ranks from NCBI taxonomy
Taxid and rank recorded for 1 out of 8 sequences

Searching BOLD for parents of missed taxa
! Taxid and rank could not be found for 7 sequences

Entomobryomorpha_taxid.fasta created with NCBI taxids

[danima@rackham2 test]$ vim Entomobryomorpha_taxid.fasta 
[danima@rackham2 test]$ ./bold2obiref -i Entomobryomorpha.fasta -d taxo -r order -t Entomobryomorpha -R AAAAAAAAAAA
Reading reference fasta file from BOLD
> Imported 8 sequences

Reading NCBI's taxonomy database
Read 2439349 records
Reducing database to include only 10490 records from order Entomobryomorpha
Read 2439350 records
> Taxonomy database ready

Extracting taxid & ranks from NCBI taxonomy
Taxid and rank recorded for 6 out of 8 sequences

Searching BOLD for parents of missed taxa
! Taxid and rank could not be found for 0 sequences

Entomobryomorpha_taxid.fasta created with NCBI taxids

[danima@rackham2 test]$ vim Entomobryomorpha_taxid.fasta 
[danima@rackham2 test]$ vim bold2obiref 
[danima@rackham2 test]$ ./bold2obiref -i Entomobryomorpha.fasta -d taxo -r order -t Entomobryomorpha -R AAAAAAAAAAA
Reading reference fasta file from BOLD
> Imported 8 sequences

Reading NCBI's taxonomy database
Read 2439349 records
Reducing database to include only 10490 records from order Entomobryomorpha
Read 2439350 records
> Taxonomy database ready

Extracting taxid & ranks from NCBI taxonomy
Taxid and rank recorded for 6 out of 8 sequences

Searching BOLD for parents of missed taxa
! Taxid and rank could not be found for 0 sequences

Entomobryomorpha_taxid.fasta created with NCBI taxids

[danima@rackham2 test]$ vim Entomobryomorpha_taxid.fasta 
[danima@rackham2 test]$ vim bold2obiref 
[danima@rackham2 test]$ ./bold2obiref -i Entomobryomorpha.fasta -d taxo -r order -t Entomobryomorpha -R AAAAAAAAAAA
Reading reference fasta file from BOLD
> Imported 8 sequences

Reading NCBI's taxonomy database
Read 2439349 records
Reducing database to include only 10490 records from order Entomobryomorpha
Read 2439350 records
> Taxonomy database ready

Extracting taxid & ranks from NCBI taxonomy
Taxid and rank recorded for 6 out of 8 sequences

Searching BOLD for parents of missed taxa
! Taxid and rank could not be found for 0 sequences

Entomobryomorpha_taxid.fasta created with NCBI taxids

[danima@rackham2 test]$ vim Entomobryomorpha_taxid.fasta 
[danima@rackham2 test]$ vim bold2obiref 

#! /usr/bin/Rscript

# This script converts DNA sequences downloaded from BOLD and retrieves the taxonomic identifier of the taxon from NCBI taxonomy, to create a new fasta file with the following information to be used with OBITools: taxid, scientific_name, and record id (from BOLD).
# Sequences from BOLD can be easily dowloaded with <<wget -O "taxon".fasta http://boldsystems.org/index.php/API_Public/sequence?taxon="taxon">>), just substituting with the taxon of interest (see options below).
# It is necessary to have downloaded and extracted the NCBI new taxdump (<<wget -m ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/new_taxdump.tar.gz>>)
# For those taxa not included in NCBI taxonomy the script will look for the immediate parent in BOLD taxonomy, and register the change of name.
# Optionally, forward and reverse primers (entered 5'-3' direction) can be attached at the beginning and end of the sequence for ecoPCR.
# Author: Daniel Marquina

library(bold)
suppressMessages(library(data.table))
suppressMessages(library(tidyverse))
suppressMessages(library(CHNOSZ))
suppressMessages(library(seqinr))
library(readr)
library(optparse)
lenght=length

# Set file names for input and output files
options( warn = -1 )

option_list = list(
  make_option(c("-i", "--input_fasta"), type="character", default=NULL,
              help="fasta file with the sequences to be renamed", metavar="character"),
  make_option(c("-o", "--output_fasta"), type="character", default=NULL,
              help="Output file name [default = input file ending in _taxid.csv]", metavar="character"),
  make_option(c("-d", "--taxonomy_directory"), type="character", default=NULL,
              help="Directory where NCBI's taxdump is stored [default = current directory]", metavar="character"),
  make_option(c("-r", "--rank"), type="character", default=NULL,
              help="Rank of the taxonomic group of interest [default = kingdom]", metavar="character"),
  make_option(c("-t", "--taxon"), type="character", default=NULL,
              help="Taxon of interest [default = Metazoa]", metavar="character"),
  make_option(c("-F", "--Forward_primer"), type="character", default=NULL,
              help="5'-3' sequence of the Forward primer [default = none]", metavar="character"),
  make_option(c("-R", "--Reverse_primer"), type="character", default=NULL,
              help="5'-3' sequence of the Reverse primer [default = none]", metavar="character")
  )

opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);

if (is.null(opt$input_fasta)){
  print_help(opt_parser)
  stop("At least one file must be provided: input fasta with the sequences to be renamed.", call.=FALSE)
}

if (is.null(opt$output_fasta)){
  opt$output_fasta <- paste0(substr(opt$input_fasta,1,nchar(opt$input_fasta)-6),"_taxid.fasta")
}

if (is.null(opt$taxonomy_directory)){
  opt$taxonomy_directory <- getwd()
}

if (is.null(opt$rank)){
  opt$rank <- "kingdom"
}

if (is.null(opt$taxon)){
  opt$taxon <- "Metazoa"
}

infile <- opt$input_fasta
outfile <- opt$output_fasta
taxonomy_directory <- opt$taxonomy_directory
rank_subset <- opt$rank
taxon_subset <- opt$taxon
forward <- as.SeqFastadna(opt$Forward_primer)
reverse <- as.SeqFastadna(toupper(paste(rev(comp(strsplit(opt$Reverse_primer, "")[[1]])), collapse="")))


# Define functions to extract NCBI taxids and ranks
taxon2id <- function(x){
  nameidx <- onlytaxonnames[name == x][1]
  if(nrow(nameidx) == 0){
    return(NA)
  } else {
    return(nameidx$id)
  }
}
id2rank <- function(x){
  ididx <- taxranks[id == x]
  if(nrow(ididx) == 0){
    return(NA)
  } else {
    return(as.character(ididx$rank))
  }
}
# Import sequences
message("Reading reference fasta file from BOLD", "\r", appendLF = T)
seq_no_taxid <- read.fasta(infile, as.string = T, whole.header = T, forceDNAtolower=F)
seq_no_taxid <- seq_no_taxid[1:8]
message("> Imported ", length(seq_no_taxid), " sequences", "\n", appendLF = T)


# Import taxonomy info
message("Reading NCBI's taxonomy database", "\r", appendLF = T)
taxnames <- suppressMessages(data.table(read_tsv(paste0(taxonomy_directory, "/rankedlineage.dmp"))))
colnames(taxnames) = c("id","", "name","", "species","", "genus","", "family","", "order","", "class","","phylum","", "kingdom","", "dominion", "")
message("Read ", length(taxnames$id), " records", "\r", appendLF = T)
setkeyv(taxnames, c("name", "id", rank_subset))
onlytaxonnames <- rbind(taxnames[name == taxon_subset], taxnames[get(rank_subset) == taxon_subset])
message("Reducing database to include only ", dim(onlytaxonnames)[1], " records from ", rank_subset, " ", taxon_subset,   "\r", appendLF = T)
taxranks <- data.table(getnodes(taxonomy_directory))
setkey(taxranks, id, rank)
message("> Taxonomy database ready", "\n", appendLF = T)


# Preparing sequence headers for query
seq_names <- getName(seq_no_taxid)
boldids <- gsub("\\|.*","", seq_names)
boldnames <- sapply(strsplit(seq_names, split="\\|"), '[[' ,2)
ori_names <- boldnames
for (i in 1:length(boldnames)){
  if (length(grep("sp.", boldnames[i]))!=0){
    boldnames[i] <- strsplit(boldnames[i], " ")[[1]][1]
  } else{}
  if (length(grep("cf.", boldnames[i]))!=0){
    boldnames[i] <- paste(strsplit(boldnames[i], " ")[[1]][1], strsplit(boldnames[i], " ")[[1]][3], sep = " ")
  } else{}
  if (length(grep("aff.", boldnames[i]))!=0){
    boldnames[i] <- paste(strsplit(boldnames[i], " ")[[1]][1], strsplit(boldnames[i], " ")[[1]][3], sep = " ")
  } else{}
}

# Query
message("Extracting taxid & ranks from NCBI taxonomy", "\r", appendLF = T)
taxid <- unlist(sapply(boldnames, taxon2id))
rank <- sapply(taxid, id2rank)
message("Taxid and rank recorded for ", length(na.omit(taxid)), " out of ", length(boldnames), " sequences", "\n", appendLF = T)

# Re-name sequences with parent taxon
message("Searching BOLD for parents of missed taxa", "\r", appendLF = T)
for (i in 1:lenght(taxid)){
  if (is.na(taxid[i])==T){
    while (nrow(taxnames[taxnames$name==boldnames[i],1])==0){
      bold_tax <- bold_tax_name(boldnames[i])
      parent_tax <- ifelse(length(bold_tax)!=1, bold_tax$parentname, strsplit(boldnames[i], ' ')[[1]][1])
      Sys.sleep(.5)
      if (length(parent_tax)==0 || parent_tax==boldnames[i]){
        break
      } else {
        boldnames[i] <- parent_tax
      }
    }
    taxid[i] <- taxon2id(boldnames[i])
    rank[i] <- id2rank(taxid[i])
  } else {}
}
taxid[which(is.na(taxid)==T)] <- "not found"
rank[which(is.na(rank)==T)] <- "not found"
message("! Taxid and rank could not be found for ", lenght(taxid)-length(taxid[taxid!="not found"]), " sequences", "\n", appendLF = T)

# Write new fasta with new names
newname <- NULL
for (i in 1:length(taxid)){
  if (boldnames[i]!=ori_names[i]){
    newname[i] <- paste0(boldids[i]," scientific_name=", boldnames[i], "; taxid=",taxid[i],"; rank=",rank[i],"; original_db_name=", ori_names[i], ";")
  } else {
    newname[i] <- paste0(boldids[i]," scientific_name=", boldnames[i], "; taxid=",taxid[i],"; rank=",rank[i],";")
  }
}

for (i in 1:length(seq_no_taxid)){
  seq_no_taxid[[i]][1] <- paste0(forward, gsub("-", "", getSequence(seq_no_taxid, as.string = T)[[i]]), reverse)
}
write.fasta(seq_no_taxid, newname, outfile, as.string = T, open = "w", nbchar = max(getLength(seq_no_taxid)))
message(outfile, " created with NCBI taxids", "\n", appendLF = T)
